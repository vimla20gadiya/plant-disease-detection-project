
import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Define parameters
batch_size = 32
img_size = (224, 224)

# Create ImageDataGenerator
train_datagen = ImageDataGenerator(
    rescale=1./255,
    shear_range=0.2,
    zoom_range=0.2,
    horizontal_flip=True,
    validation_split=0.2
)

# Load training dataset
train_dataset = train_datagen.flow_from_directory(
    'C:\Users\Reva Gawankar\OneDrive\Desktop\plant detection\dataset',
    target_size=img_size,
    batch_size=batch_size,
    class_mode='categorical',
    subset='training'
)

# Load validation dataset
validation_dataset = train_datagen.flow_from_directory(
    'C:\Users\Reva Gawankar\OneDrive\Desktop\plant detection\dataset',
    target_size=img_size,
    batch_size=batch_size,
    class_mode='categorical',
    subset='validation'
)

# Create a simple CNN model
model = tf.keras.models.Sequential([
    tf.keras.layers.Conv2D(32, (3, 3), activation='relu', input_shape=(224, 224, 3)),
    tf.keras.layers.MaxPooling2D(pool_size=(2, 2)),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(len(train_dataset.class_indices), activation='softmax')
])

# Compile the model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(train_dataset, epochs=5, validation_data=validation_dataset)

# Save the model
model.save('plant_disease_model.h5')

pip install Flask

from flask import Flask, render_template, request
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
import numpy as np

app = Flask(__name__)

# Load the trained model
model = load_model('plant_disease_model.h5')

# Define a function for image processing
def process_image(img_path):
    img = image.load_img(img_path, target_size=(224, 224))
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_array /= 255.0
    return img_array

# Define route for the home page
@app.route('/')
def home():
    return render_template('index.html')

# Define route for predicting plant disease
@app.route('/predict', methods=['POST'])
def predict():
    if request.method == 'POST':
        img_file = request.files['image']
        img_path = 'static/uploads/' + img_file.filename
        img_file.save(img_path)

        img_array = process_image(img_path)
        prediction = model.predict(img_array)

        predicted_class = train_dataset.class_indices.keys()[np.argmax(prediction)]
        return render_template('result.html', prediction=predicted_class, image_path=img_path)

if __name__ == '__main__':
    app.run(debug=True)





